#!/bin/bash
#
# libssl and libcrypto (OpenSSL or derivate) support, with installer
#
# Usage:
#   mkl_require libssl
#

# And then call the following function from the correct place/order in checks:
#   mkl_check libssl [<action>]
#

function manual_checks {
    local action=${1:-disable}

    if [[ $MKL_DISTRO == "osx" ]]; then
        # Add brew's OpenSSL pkg-config path on OSX
        # to avoid picking up the outdated system-provided openssl/libcrypto.
        export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/openssl/lib/pkgconfig"
    fi

    # OpenSSL provides both libcrypto and libssl
    mkl_meta_set "libssl" "deb" "libssl-dev"
    mkl_meta_set "libssl" "rpm" "openssl-devel"
    mkl_meta_set "libssl" "brew" "openssl"
    mkl_meta_set "libssl" "static" "libssl.a libcrypto.a"

    mkl_lib_check "libcrypto" "" $action CC "-lcrypto"
    mkl_lib_check "libssl" "WITH_SSL" $action CC "-lssl" \
                      "#include <openssl/ssl.h>"
}


# No source installer on osx: rely on openssl from homebrew
if [[ $MKL_DISTRO != osx ]]; then

    # Install libssl from source tarball on linux.
    #
    # Param 1: name (libssl)
    # Param 2: install-dir-prefix (e.g., DESTDIR)
    # Param 2: version (optional)
    function install_source {
        local name=$1
        local destdir=$2
        local ver=1.0.2q

        local conf_args="--openssldir=/usr/lib/ssl zlib shared"
        if [[ $ver == 1.0.* ]]; then
            extra_conf_args="${extra_conf_args} no-krb5"
        fi

        echo "### Installing $name $ver from source to $destdir"
        if [[ ! -f config ]]; then
            echo "### Downloading"
            curl -sL https://www.openssl.org/source/openssl-${ver}.tar.gz | \
                tar xzf - --strip-components 1
        fi

        if [[ ! -f config.log ]]; then
            echo "### Configuring"
            ./config --prefix="/usr" $conf_args || return $?
            make -j clean
        fi

        echo "### Building"
        make -j

        echo "### Installing to $destdir"
        make INSTALL_PREFIX="$destdir" install_sw

        return $?
    }
fi
